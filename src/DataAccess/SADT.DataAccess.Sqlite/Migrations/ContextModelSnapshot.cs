// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADT.DataAccess.Sqlite;

namespace SADT.DataAccess.Sqlite.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("SADT.DataAccess.Sqlite.Entitys.LastProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("TEXT");

                    b.Property<string>("NameProject")
                        .HasColumnType("TEXT");

                    b.Property<string>("PathProject")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeTransformer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("LastProjects");
                });

            modelBuilder.Entity("SADT.DataAccess.Sqlite.Entitys.Wire.PressurePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Pressure")
                        .HasColumnType("REAL");

                    b.Property<int>("WireId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WireId");

                    b.ToTable("PressurePoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Pressure = 10.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 2,
                            Pressure = 20.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 3,
                            Pressure = 30.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 4,
                            Pressure = 40.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 5,
                            Pressure = 50.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 6,
                            Pressure = 60.0,
                            WireId = 1
                        },
                        new
                        {
                            Id = 7,
                            Pressure = 10.0,
                            WireId = 2
                        },
                        new
                        {
                            Id = 8,
                            Pressure = 20.0,
                            WireId = 2
                        },
                        new
                        {
                            Id = 9,
                            Pressure = 30.0,
                            WireId = 2
                        },
                        new
                        {
                            Id = 10,
                            Pressure = 40.0,
                            WireId = 2
                        },
                        new
                        {
                            Id = 11,
                            Pressure = 50.0,
                            WireId = 2
                        },
                        new
                        {
                            Id = 12,
                            Pressure = 60.0,
                            WireId = 2
                        });
                });

            modelBuilder.Entity("SADT.DataAccess.Sqlite.Entitys.Wire.Wire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Wires");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "АПБ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "АВГ"
                        });
                });

            modelBuilder.Entity("SADT.DataAccess.Sqlite.Entitys.Wire.PressurePoint", b =>
                {
                    b.HasOne("SADT.DataAccess.Sqlite.Entitys.Wire.Wire", "Wire")
                        .WithMany("PressurePoints")
                        .HasForeignKey("WireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wire");
                });

            modelBuilder.Entity("SADT.DataAccess.Sqlite.Entitys.Wire.Wire", b =>
                {
                    b.Navigation("PressurePoints");
                });
#pragma warning restore 612, 618
        }
    }
}
